https://playwright.dev/

# Playwright 인증 E2E 테스트 시나리오 (Fixture 기반, UI/토스트 포함)

---

## 1. 로그인 성공 시나리오 v

* Fixture: `successTest`
* 사전 조건: Captcha 성공, Supabase `signInWithPassword` 성공
* 테스트 흐름:

  1. 로그인 페이지 이동
  2. 이메일과 비밀번호 입력
  3. 로그인 버튼 클릭
  4. `signInWithPassword` 호출 확인
  5. 성공 피드백 메시지 확인
  6. 메인 페이지로 리다이렉트 확인

---

## 2. 로그인 실패 시나리오 v

### 2-1. 잘못된 입력 증명 v

* Fixture: `wrongInputTest`
* 테스트 흐름:

  1. 로그인 페이지 이동
  2. 잘못된 이메일/비밀번호 입력
  3. 로그인 버튼 클릭
  4. API 호출 실패 확인
  5. 토스트 알림 확인 (예: "이메일/비밀번호가 올바르지 않습니다.")
  6. 입력 필드 상태 확인(선택 사항)
  7. 페이지 이동 없음

### 2-2. 잘못된 자격 증명 (Supabase 인증 실패) v

* Fixture: `wrongUserTest` (mock-auth-api.ts)
* 테스트 흐름:

  1. 로그인 페이지 이동
  2. 이메일/비밀번호 입력
  3. 로그인 버튼 클릭
  4. API 호출 실패 확인
  5. 토스트 알림 확인 (예: "이메일/비밀번호가 올바르지 않습니다.")
  6. 입력 필드 상태 확인
  7. 페이지 이동 없음

### 2-3. 캡챠 실패 v

* Fixture: `wrongVerificationTest`
* 사전 조건: Captcha 실패, Supabase API 호출 없음
* 테스트 흐름:

  1. 로그인 페이지 이동
  2. 입력 필드 비활성화 확인
  3. 로그인 버튼 클릭 불가 확인
  4. 버튼 글자가 “캡챠 인증 필요” 등으로 변경되었는지 확인
  5. API 호출 없음 확인

---

## 3. 회원가입 성공 시나리오

* Fixture: C:\Users\Inseong\Desktop\folder\project\qr-code-admin\e2e\fixtures\signup.fixture.ts
* 사전 조건: Captcha 성공, Supabase `signUp` 성공
* 테스트 흐름:

  1. 회원가입 페이지 이동
  2. 이메일, 비밀번호, 비밀번호 확인 입력
  3. 회원가입 버튼 클릭
  4. 성공 메시지 확인
  5. 로그인 페이지 리다이렉트 확인

---

## 4. 회원가입 실패 시나리오

### 4-1. 이미 등록된 이메일 (Supabase 인증 실패)

* Fixture: C:\Users\Inseong\Desktop\folder\project\qr-code-admin\e2e\fixtures\signup.fixture.ts
* 사전 조건: Captcha 성공, Supabase `signUp` 실패
* 테스트 흐름:

  1. 회원가입 페이지 이동
  2. 기존 이메일 입력
  3. 회원가입 버튼 클릭
  4. API 호출 실패 확인
  5. 토스트 알림 확인 (예: "이미 등록된 이메일입니다.")
  6. 페이지 이동 없음

### 4-2. 캡챠 실패

* Fixture: C:\Users\Inseong\Desktop\folder\project\qr-code-admin\e2e\fixtures\signup.fixture.ts
* 사전 조건: Captcha 실패, Supabase 호출 없음
* 테스트 흐름:

  1. 입력 필드 비활성화 확인
  2. 회원가입 버튼 클릭 불가 확인
  3. 버튼 글자 변경 확인
  4. API 호출 없음 확인

---

## 5. 비밀번호 찾기 시나리오

* Fixture: `successTest`
* 사전 조건: Captcha 성공, Supabase `resetPasswordForEmail` 성공
* 테스트 흐름:

  1. 비밀번호 찾기 페이지 이동
  2. 이메일 입력
  3. "비밀번호 찾기" 버튼 클릭
  4. 성공 메시지 확인

---

## 6. 비밀번호 재설정 시나리오

* Fixture: `successTest`
* 사전 조건: Supabase `updateUser({ password })` 성공
* 테스트 흐름:

  1. 재설정 링크 이동
  2. 새 비밀번호 입력
  3. "비밀번호 수정" 버튼 클릭
  4. 성공 메시지 확인
  5. 로그인 페이지 리다이렉트 확인

---

## 7. 방문자 접속 시나리오

* Fixture: `successTest`
* 사전 조건: Captcha 성공, Supabase `signInAnonymously` 성공
* 테스트 흐름:

  1. 로그인 페이지 이동
  2. "방문자로 접속하기" 버튼 클릭
  3. 메인 페이지로 리다이렉트 확인

---

## 8. 로그아웃 시나리오

* Fixture: `successTest`
* 사전 조건: Supabase `signOut` 호출 성공
* 테스트 흐름:

  1. 로그인 후 메인 페이지 이동
  2. 로그아웃 버튼 클릭
  3. 로그인 페이지 리다이렉트 확인
  4. 로컬/세션 스토리지 인증 토큰 제거 확인

 