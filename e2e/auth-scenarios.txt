https://playwright.dev/

# Playwright 인증 E2E 테스트 시나리오 (Fixture 기반, UI/토스트 포함)

---

## 4. 비밀번호 재설정

### 4-1. 비밀번호 재설정 성공
* Fixture: `updatePasswordSuccessTest`
* 사전 조건: 유효한 재설정 토큰, Supabase `updateUser` 성공
* 테스트 흐름:
  1. 재설정 링크로 페이지 이동
  2. 새 비밀번호, 비밀번호 확인 입력
  3. "비밀번호 수정" 버튼 클릭
  4. API 호출 확인
  5. 성공 메시지 확인
  6. 로그인 페이지 리다이렉트 확인

### 4-2. 비밀번호 재설정 실패 - 유효하지 않은 캡챠 토큰
* Fixture: `updatePasswordFailInvalidCaptchaTest`
* 사전 조건: 만료되거나 유효하지 않은 캡챠 토큰
* 테스트 흐름:
  1. 재설정 링크로 페이지 이동
  2. 비밀번호 입력창, 제출 버튼 비활성화 확인

### 4-3. 비밀번호 재설정 실패 - 잘못된 비밀번호 형식
* Fixture: `updatePasswordFailInvalidFormatTest`
* 테스트 흐름:
  1. 재설정 링크로 페이지 이동
  2. 비밀번호 입력 후 에러 메시지 확인 (예: "대소문자를 포함해야 합니다.")
  3. 로그인 페이지로 리다이렉트 또는 에러 페이지 표시

### 4-4. 비밀번호 재설정 실패 - 유효하지 않은 토큰
* Fixture: `updatePasswordFailInvalidFormatTest`
* 사전 조건: 만료되거나 유효하지 않은 재설정 토큰
* 테스트 흐름:
  1. 재설정 링크로 페이지 이동
  2. 비밀번호 입력 후 에러 메시지 확인 (예: "유효하지 않은 접근입니다.")
  3. 로그인 페이지로 리다이렉트 또는 에러 페이지 표시

---

## 5. 방문자 접속

### 5-1. 방문자 접속 성공
* Fixture: `successTest`
* 사전 조건: Captcha 성공, Supabase `signInAnonymously` 성공
* 테스트 흐름:
  1. 로그인 페이지 이동
  2. "방문자로 접속하기" 버튼 클릭
  3. 메인 페이지로 리다이렉트 확인

* 특이사항: `signInAnonymously` API 함수는 존재하나, 이를 호출하는 UI 컴포넌트("방문자로 접속하기" 버튼)가 실제 코드에 연결되어 있는지 확인 필요.

### 5-2. 방문자 접속 실패 - Supabase 호출 실패
* Fixture: `anonymousSignInFailTest`
* 사전 조건: Captcha 성공, Supabase `signInAnonymously` 실패
* 테스트 흐름:
  1. 로그인 페이지 이동
  2. "방문자로 접속하기" 버튼 클릭
  3. API 호출 확인
  4. 토스트 알림 확인 (예: "일시적인 오류가 발생했습니다.")
  5. 페이지 이동 없음

* 특이사항: `signInAnonymously` API 함수는 존재하나, 이를 호출하는 UI 컴포넌트("방문자로 접속하기" 버튼)가 실제 코드에 연결되어 있는지 확인 필요.

---

## 6. 로그아웃

### 6-1. 로그아웃 성공
* Fixture: `successTest`
* 사전 조건: 로그인 상태, Supabase `signOut` 성공
* 테스트 흐름:
  1. 메인 페이지에서 로그아웃 버튼 클릭
  2. API 호출 확인
  3. 로그인 페이지 리다이렉트 확인
  4. 로컬/세션 스토리지 인증 토큰 제거 확인

* 특이사항: `signOutUser` API 함수는 존재하나, 이를 호출하는 UI 컴포넌트(로그아웃 버튼)가 실제 코드에 연결되어 있는지 확인 필요.
