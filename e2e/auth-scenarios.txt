https://playwright.dev/

# Playwright 인증 E2E 테스트 시나리오 (API 모킹 포함)

---

1. 로그인 성공 시나리오
- 사전 조건 (모킹 설정):
  1. Cloudflare Captcha 모킹: 항상 성공 응답 반환
  2. Supabase JS 모킹: supabase.auth.signInWithPassword 호출 성공
  
- 테스트 흐름:
  1. 로그인 페이지(PATHS.AUTH.LOGIN) 이동
  2. 이메일과 비밀번호 입력
  3. 로그인 버튼 클릭
  4. supabase.auth.signInWithPassword 호출 성공 확인
  5. 성공 피드백 메시지 확인
  6. 메인 페이지(PATHS.ROOT)로 리다이렉트 확인

2. 로그인 실패 시나리오 (잘못된 자격 증명)
- 사전 조건 (모킹 설정):
  1. Cloudflare Captcha 모킹: 항상 성공
  2. Supabase JS 모킹: supabase.auth.signInWithPassword 호출 실패

- 테스트 흐름:
  1. 로그인 페이지 이동
  2. 잘못된 이메일 또는 비밀번호 입력
  3. 로그인 버튼 클릭
  4. 에러 메시지("이메일/비밀번호가 올바르지 않습니다.") 확인
  5. 입력 필드 스타일 변화 확인(선택 사항)

3. 회원가입 성공 시나리오
- 사전 조건 (모킹 설정):
  1. Cloudflare Captcha 모킹: 항상 성공
  2. Supabase JS 모킹: supabase.auth.signUp 호출 성공

- 테스트 흐름:
  1. 회원가입 페이지(PATHS.AUTH.SIGNUP) 이동
  2. 이메일, 비밀번호, 비밀번호 확인 입력
  3. 회원가입 버튼 클릭
  4. 성공 피드백 메시지 확인
  5. 로그인 페이지로 리다이렉트 확인

4. 회원가입 실패 시나리오 (이미 등록된 이메일)
- 사전 조건 (모킹 설정):
  1. Cloudflare Captcha 모킹: 항상 성공
  2. Supabase JS 모킹: supabase.auth.signUp 호출 실패(이미 등록된 이메일)

- 테스트 흐름:
  1. 회원가입 페이지 이동
  2. 기존 이메일 입력
  3. 회원가입 버튼 클릭
  4. 에러 메시지("이미 등록된 이메일 주소입니다.") 확인

5. 비밀번호 찾기(재설정 요청) 시나리오
- 사전 조건 (모킹 설정):
  1. Cloudflare Captcha 모킹: 항상 성공
  2. Supabase JS 모킹: supabase.auth.resetPasswordForEmail 호출 성공

- 테스트 흐름:
  1. 비밀번호 찾기 페이지 이동
  2. 가입된 이메일 입력
  3. "비밀번호 찾기" 버튼 클릭
  4. 성공 피드백 메시지("메일을 확인해주세요.") 확인

6. 비밀번호 재설정 시나리오
- 사전 조건 (모킹 설정):
  1. Supabase JS 모킹: supabase.auth.updateUser({ password }) 호출 성공

- 테스트 흐름:
  1. 이메일 재설정 링크를 통해 비밀번호 재설정 페이지 이동
  2. 새로운 비밀번호와 확인 값 입력
  3. "비밀번호 수정" 버튼 클릭
  4. 성공 피드백 메시지("수정되었습니다!") 확인
  5. 로그인 페이지로 리다이렉트 확인

7. 방문자 접속 시나리오
- 사전 조건 (모킹 설정):
  1. Cloudflare Captcha 모킹: 항상 성공
  2. Supabase JS 모킹: supabase.auth.signInAnonymously 호출 성공

- 테스트 흐름:
  1. 로그인 페이지 이동
  2. "방문자로 접속하기" 버튼 클릭
  3. 메인 페이지(PATHS.ROOT)로 리다이렉트 확인

8. 로그아웃 시나리오
- 사전 조건 (모킹 설정):
  1. Supabase JS 모킹: supabase.auth.signOut 호출 성공

- 테스트 흐름:
  1. 로그인 상태에서 메인 페이지 이동
  2. 로그아웃 버튼 클릭
  3. 로그인 페이지로 리다이렉트 확인
  4. 로컬/세션 스토리지에서 인증 토큰 제거 확인(선택 사항)
