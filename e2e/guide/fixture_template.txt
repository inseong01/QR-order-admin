import { Page, test as base } from '@playwright/test';

export let isApiCalled = false;

/**
 * [feature] 요청을 모킹하여 성공 응답을 반환합니다.
 */
async function [feature]Success(page: Page) {
    await page.route('**/auth/v1/token?grant_type=password', async (route) => {
      isApiCalled = true; // API가 호출되었음을 표시
      await route.fulfill({
        status: 200,
        contentType: 'application/json',
        body: JSON.stringify({ message: 'Success' }),
      });
    });
};

/**
 * [feature] 요청을 모킹하여 실패 응답을 반환합니다.
 */
async function [feature]Fail(page: Page) {
    await page.route('**/auth/v1/token?grant_type=password', async (route) => {
      isApiCalled = true; // API가 호출되었음을 표시
      await route.fulfill({
        status: 400,
        contentType: 'application/json',
        body: JSON.stringify({ message: 'Invalid credentials' }),
      });
    });
};

base.beforeEach(() => {
  isApiCalled = false;
});

// --- Variables ---

export { isSupabaseCalled };

// --- Fixtures ---

// 시나리오 1: [feature] 성공
export const loginSuccessTest = base.extend({
  page: async ({ page }, use) => {
    await [feature]Success(page);
    await use(page);
  },
});

// 시나리오 2: [feature] 실패 - [원인]
export const loginCaptchaFailTest = base.extend({
  page: async ({ page }, use) => {
    await [feature]Fail(page);
    await use(page);
  },
});
