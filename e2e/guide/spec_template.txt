아래 코드는 Playwright 기반의 spec.ts 테스트다.  
테스트 코드를 재작성할 때 반드시 다음 규칙을 적용하라:

1. 상위 블록 구조
   - test.describe 블록에 한국어 제목을 붙이고, 기능 단위를 구분한다.
   - 필요하다면 test.describe.configure 옵션(serial 등)을 명시한다.

2. 주석 처리
   - 각 describe, it(menuTabAPITest_* 등) 블록 시작 부분에는 `/** ... */` 형태의 주석으로
     테스트 목적과 기대 결과를 간단히 설명한다.
   - 주석에는 `성공/실패`, `입력`, `API 모킹`, `토스트 알림 확인` 등 핵심 키워드를 포함한다.

3. 테스트 제목 작성 규칙
   - 한글로 작성하며 `[성공]`, `[실패]` 접두어를 붙인다.
   - “무엇을 했을 때 어떤 결과가 나와야 하는지”를 명확히 드러내라.
   - 예:  
     - `[성공] 신규 메뉴 카테고리 및 메뉴 항목 추가 - 정상적으로 추가되면 화면에 표시`  
     - `[실패] 메뉴 생성 요청 시 API 오류 발생 - 오류 토스트 알림 노출`

4. 단계별 주석
   - 테스트 본문은 UI 상의 흐름을 단계별로 번호(`// 1.`, `// 2.`)를 붙여 작성한다.
   - 각 단계는 “사용자 조작 → 예상 결과(또는 검증)” 형식으로 적는다.
   - 예:  
     - `// 1. 위젯 열기 → '분류 추가' 클릭`  
     - `// 2. 분류명 입력 후 '추가하기' 클릭`  
     - `// 3. 확인 모달 '예' 클릭 및 POST 요청 확인`

5. 검증 코드 패턴
   - API 호출 확인 시 `page.waitForRequest`를 사용하고, 주석으로 “POST 요청 확인”, “PATCH 요청 확인” 등 API 동작을 명시한다.
   - UI 검증은 `expect(...).toBeVisible()` 등과 함께 주석으로 “토스트 알림 확인”, “화면 반영 확인”을 적는다.

출력은 코드 형식을 유지하면서, 위 규칙을 충실히 반영한 정리된 테스트 코드로 작성하라.
